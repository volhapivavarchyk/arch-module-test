<?php

declare(strict_types=1);

namespace App\Tests\Helper\Math;

use App\Helper\Math\QuadraticEquationHelper;
use Exception;
use Generator;
use PHPUnit\Framework\Assert;
use PHPUnit\Framework\TestCase;
use TypeError;

class QuadraticEquationTest extends TestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testSolveFirstCoefficientNoZero(): void
    {
        $this->expectException(Exception::class);
        $this->expectExceptionMessage('The first coefficient can not be zero');

        $result = QuadraticEquationHelper::solve(1e-7, 1, 1);
    }

    /**
     * @dataProvider dataProvider
     * @return void
     * @throws Exception
     */
    public function testSolve(array $input, array $expected): void
    {
        $result = QuadraticEquationHelper::solve(...$input);

        Assert::assertEquals($expected, $result);
    }

    /**
     * @return Generator<array>
     */
    public function dataProvider(): Generator
    {
        yield [[2, 0, 1], []];
        yield [[1, 0, -1], [1, -1]];
        yield [[2, 0, -1], [0.71, -0.71]];
        yield [[1, -7, 0], [0, 7]];
        yield [[1, 2, 1], [-1, -1]];
        yield [[1, -2, -3], [3, -1]];
    }

    public function testSolveNoCorrectType(): void
    {
        $this->expectException(TypeError::class);

        $result = QuadraticEquationHelper::solve('abc', 'abc', 'abc');
    }
}